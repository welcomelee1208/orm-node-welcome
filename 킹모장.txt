오름캠프 내용 끄적끄적
vcs(version control system)
각종 문서 및 개발 소스 버전 제어 및 변경 관리 시스템-> 컴퓨터 모든 파일 관리 가능
• 형상관리 시스템 및 개발 협업 관리 시스템 이라고도 한다
종류
Git, cvs, svn, tfs, vsts
git뺴고는 거의 안쓴다.
이유
무료 오픈 소스 vcs
로컬, 서버 저장소 2가지 모두 제공-> 분산 저장소 모델-> 인터넷 연결 없이도 로컬저장소에 저장이 되어 있으면 사용가능
(cvs, svn, tfs, vsts-> 서버저장소 1가지만 제공 : 인터넷 연결 안될시 사용불가능)
+git이 소스제어 속도가빠르고 효율적임
tfs->마이크로 소프트가 제공하던 상용ALM TOOL.
-----------------------------------------------
프로그래밍 언어의 종류
1) 기계어(어셈블리어):기계/컴퓨터를 위한 언어
010101001001010101010
2) 프로그래밍 언어(사람을 위한):
-JAVA,C,C++HTML,CSS,Javascript 등등
=>컴파일 이란 과정을 통해 기계어로 변환

git이란 분산 버전 관리 시스템
						

프로그래밍 개발 언어의 종류2



1)compile 언어=>ide
>c,c++,java,c#->빌드과정을 통해 미리 기계어로 산출물이 나옴
->실행 속도가빠름

2)interpreting 언어->code editor(코드 편집기-vscode)
line by line  한줄씩 컴파일 해서 
html, css, Javascript, python, php,sql
------------------------------------------
컴퓨터에게 일을 시키는 방법
GUI-Graphic User Interface
CLI-Command Line Interface
GUI->마우스로 클릭-> 개발툴에서 지원
CLI-> 명령어를 기반으로->git은 기본지원
github-> git의 하나의 요소, 원격 저장소, 댕꿀 서비스


Git hub
오픈소스 및 비지니스용 git 원격 서버 저장소
공개저장소 이용시 모든이에게 소스 공개
공개 저장소와 프라이빗 저장소로 나뉘고 프라이빗 저장소는 허락된 사용자 들에게만 소스공유(원래는 인원제한이 있었지만 Ms 가 풀어버림)
2019년에 마이크로소프트가 먹음
유사 서비스로 GitLab,BitBucket 이 있음

git remote add origin 깃허브 원격 저장소 주소
git branch -M main: 개발자 컴퓨터에서 깃으로 만든 로컬 저장소의 기본 브랜치 인 마스터 브랜치이름을 메인브랜치로 바꿔준다
왜why>? 깃허브원격 저장소의 기본 브랜치가  main branch 이기때문에 개발자 컴퓨터 로컬 저장소의 브랜치 이름을 서버 저장소의 이름을 같게 만들어줘야 에러가 나지 않는다.


github 토큰 제거법
윈도우 자격증명 관리자
-> 윈도우 자격증명->git:https://github.com 제거
커밋 메세지 형식
자주쓰는거
feat 새로운 기능을 추가하거나 기존의 기능을 요구사항 변경으로 변경한 경우
new 새로운 기능을 추가한 경우
improve 기존기능을 수정한 경우,요구사항이 변경되어 수정된 경우
fix 기능상 버그픽스를 했을 경우
docs 문서(주석)의 추가/수정 의 경우, 직접적인 코드변경없이 순수하게 문서(주석)만 수정할 경우
style UI를 추가/변경 하는 경우나 스타일 관련 작업을 한 경우
test 테스트 코드를 별도로 추가하거나 변경햇을경우if 기능을 추가하고 테스트코드를 동시에 작성했으면 feat 으로 사용
release 릴리스를 하기 위해 패키지 버전을 올리거나 릴리스 버전 커밋을 찍기 위한 경우
Body:옵션;무엇을 왜 형식으로 작성
추가/수정한내용1
추가/수정한 내용2
Footer
resolves: 문의,요청에 의한 이슈는 해당하는 경우 이슈번호
closes: 일반적인 개발과 관련된 이슈에 해당하는 경우 이슈번호
Fixes: 버그픽스, 핫픽스 관련 이슈에 해당하는 경우 이슈번호
See also: 커밋의 이슈와 관련되어있는 이슈들이 존재하는 경우, 또는 관련된 이슈틀이 있경우 이슈번호
==========================================================================
Local Storage(Local PC)<----------------------------> Remote Storage(Github)
ㄴDefault Branch:master                               Default Branch:main
   ex1 ㄴ Default Branch->삼성전자 브랜치(신규기능추가/기존기능 제거/기존기능 변경)
       ㄴDefault Branch현대 자동차 브랜치
     ex2) ㄴ신규 기능 구현-wsw branch- 담당기능 구현
           ㄴ신규 기능 2 수현-eddybranch-담담기능 구현
   ex3)ㄴ DEV BRANCH
          ㄴTEST BRANCH (DEV BRANCH복사) 이상 없으면TEST BRANCH를 DEVV BRANCHJ와 결합
               그후 DEV BRANCH 를 원본 BRANCH 에 결합
GIT BRANCH 전략

1)GIT BRANCH 전략 :전통적인 (스탠다드/올드한) 솔루션 회사에서 사용
ㄴ추가/수정하는 시간이 긴 경우(시간과 비용이 많이듬)
스피디한 요구사항 반영및 배포 어려움

2)Github Branch 전략
원격 저장소를 활용하여 1)번 보다 빠르고 즉각적인 피드백 수용 가능
=================================================================
실무 Github Flow 브랜치 전략 실습
1) 배민의 개발자..../우아한 형제들
-1) 배민 기본 서비스 프로젝트 생성
-2)배민 서비스 프로덕션 brother-branch(main)소스로컬/원격 저장소 생성
ㄴ 최소 배달가능비용 확인기능-이환영-welcome-branch
ㄴ 레트로 컨셉의 메인을  Modern한 UI/UX로 변경-오영석-young-branch
Local storage

main(brother-default branch)-프로덕션 배민 서비스 프로젝트 폴더
ㄴwelcome-branch(cost-confirm-branch):최소 배달가능 비용확인 기능구현 프로젝트
   

ㄴyoung-branch:UI/UX 변경 프로젝트

ㄴeddy-branch:뭔가 기능추가 구현 프로젝트


*은 하나의 물리적 개발 소스가 현재 어느 브랜치를 대상으로 작업중인지 알려줌(액티브 브랜치)
main
*welcome-branch
young-branch


git checkout branch ㅍㅍㅍㅍ-> 기준되는 브랜치가 ㅍㅍㅍㅍ 로 바뀜
-------
Local Storage<--------------->Github Remote Storage
main<----------------------------->main
ㄴwelcome-branch<------------------> welcome-branch

 Java script= ecma script

LTS:Long term support 3년 정도 기술지원
Current: 업데이트 할때 마다 바뀜
1)node.js
노드는 크롬v8 자바 스크립 엔진으로 빌드된 자바스크립트 런타임
런타임이란
특정 개발 언어로 만든 프로그램을 실행할 수 있는 환경
노드는 자바스크립트로 개발된 프로그램을 각종 컴퓨터(서버포함)에서 실행 할 수 있게 런타임 환경 지원

Assembly  언어: 101010101010
프로그래밍 언어: 사람(개발자,프로그래머)를 위한 언어

-인터 프리팅 언어
ㄴ 파이썬, 자바스크립트, html,css,sql,PHP, ASP
ㄴ  인터프리팅 언어로 개발된 개발소스 자체를 서버에 업로드 하고 서버상에서 라인 바이 라인 (한줄 한줄=개발자가 코딩한 소스를 한줄씩 )읽어서 컴파일한다.(기계어 변환)
-컴파일 언어
ㄴ C,C++,C#,JAVA, RUST
ㄴ 해당 언어로 개발된 코드를 (VS2022,인텔리=IDE)빌드(실행=컴파일)하여 기계어 결과물이 나옴-> 개발단계에서 생성됨

프로그래밍 언어의 성능/실행속도/효율성 측면에서 보면 절대적으로 컴파일 언어가 인터프리팅 언어가 좋음(성능이 좋을순 없다.) 

그런데도 인터프리팅 언어 를 사용하는이유:효율성은 조금 떨어져도 생산성이 훨신 좋음
속도차이가 나도 사람이 인지하기 어려운 정도이기때문에 생산성이 좋은 인터프리팅 언어를쓰는것
본디 java script 는 브라우저에서 html,css 제어하는 용도
하지만 node js 가 java script 를 서버환경에서도 작동하게 만듬

런타임: 실행(개발자 가 코딩한 개발 소스가 실행되는것.. 실행이란..개발자가 만든 코드가 기계어로 변환되어 해당 실행환경(모바일OS/서버OS/PC OS/실행되는SW들)에서 컴퓨터에게 일을 시키는것

런타임 환경

노드 특징
이벤트 기반 개발 모델
논 블록킹I/O 모델 제공
가볍고 효율적인 백엔드 자바스크립트 기반 개발 프레임 워크(프런트 엔드에도씀)
자바스크립트 오픈 소
자바스크립트 가 객체 지향 기능으로 바뀐 시기는 2015년
이이후 부터 자바스크립트는 가벼운언어가 아님
npm init 실행 후 순차적 정보 입력 후 최종 yes 하면 폴더 또는 프로젝트에 package.json 파일 생성
{
  "name": "myfirstapp",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC"
}
npm을 사용하는 이유: 노드패키지 의설치, 설치된 패키지를 관리하는 SW
npm 주요 명령어 실습
신규패키지 설치하기:npm install 패키지명 또는 npm i 패키지명
지우기 npm uninstall 패키지 명
복수 다운 , 삭제:npm install 패키지명  패키지명  npm uninstall 패키지 명 패키지 명(패키지명 뒤에 공백 한칸 )
 package-lock.json 의 역할 :패키지간의 의존성, 종속성을 보여줌.(개발자가 건들일이 거~~~~~~~~~의 없다.)npm sw 가 알아서 관리함
 파일 공유할때는 물리적으로 라이브러리를 지우고 (어차피 패키지.json 에 기록이 남아있기때문에) 공유한다
일부 패키지의 경우  컴퓨터에 전역으로 설정되는 경우도 있다.
설치하는 노드 패키지의 용도 2가지
1) 서비스를 위한 개발 용도패키지
-서비스를 위해 반드시 필요한 패키지
npm i 패키지명
npm i -g 패키지명

2) 개발 할떄만 사용하는 패키지
-개발용 패키지/ 
-개발 생산성/효율성 제고를 위한 패키지 설치
npm i 패키지명 ---save-dev
1,2) 할때마다 설치할것
3) 개발 컴퓨터 전역 공간에 전역 패키지 설치하기
npm install-global or npm i -g
nvm version
nvm ls  
nvm install 14.21.2
nvm use 14.21.2
ncm uninstall 14.21.2

ECscript 란?

script언어
스크립트 언어는 매우빠르게 배우고 작성하기 위해 고안됨
짧은 소스코드 파일이나 간단한 컴퓨터 프로그래밍 개발에 사용됨
Javascript, VBscript..Shellscript.. Coffeescript. 바닐라 스크립트 등 다양한 종류 존재함 

자바스크립트구분해야햠(서버에서 돌아가는지(백엔드)/웹페이지에서 돌아가는지(프런트엔드))
Javascript  (=ECMA SCRITPT)
객체 기반 스크립트 프로그래밍 언어
과거에는 html/css제어및 기능구현 언어로 사욛
최근엔 서버측 동적 웹 프로그래밍 (Node.js)및 다양ㄱ한 분야에서 사용됨.
ECMA스크립트라는건 ECMA인터내셔널의 ECMA-262 기술 규격에 정의한 자바스크립트 언어 표준 스펙을 준수한 표준언어스펙
ES2015(ES6) 이후 판도가 바뀜.새로운 문법과 기능이미친듯이 추가->> 객체 지향 프로그래밍 언어로 변모하게됨
E1,E2,E3,E4,E5,E6(ES2015),ES2016.....

서비스 개발자(어플리케이션) 서비스 제공을 위해 개발을 하는 개발자
프레임 워크 개발자(개발자를 위해 개발을하는 날개잃은 천사들)

html-> hyper text markup language
<!doctype html> 의 의미는 이문서는 html5 로 만들어진 문서이다 라는 의미.

2015년 이후로 var의대체품으로 나온let,const
var는 블록스코프의 제한 기능이 불가능(블록스코프 밖에서도 변환이 가능)
하지만 let 이나 const 는 블록스코프 의 제한기능이 가능(블록스코프 밖에서는 변환이 불가능)
템플릿 문자열 문법 사용법
역홑따옴표(벡틱 문자열)으로 문자열 기반 템플리을 작성할수있다
줄바꿈 가능
벡틱 문자열 안에 변수 추가 가능``

클래스와 객체의 개념을 이해하자..
SW를 개발하는 목적/이유
프로그래밍의 목적
현실세계의 문제점/불편함들을 개선하거나 삶을 즐겁게 해주기 위해서
현실세계의 문제점/불편함을 개선하려면 현실세계의 존재하는 것들을 프로그래밍으로 표현해야하다,

배달원 강창훈, 우성우, 정민영
플랫폼 배민
음식점: 오제제, 김일도, 쉑쉑버거
주문자: 이용혁, 한고운, 오영석
이용혁님이 배민 플랫폼에 오제제 식당에 치즈돈까스 세트를 주문한다.
한고운님이 배민 플랫폼에 쉑쉑버거 세트를 주문한다.
오영석님이 배민 플랫폼에 할매순대국에서 돼지국밥을 주문한다.
오제제에서 이용혁님의 주문을 접수하였습니다.
오제제는 음식을 만들고 배달원을 호출한다.
정민영님이 접수하고 주문 음식을 배달한다.
===============================
너무 복잡하기때문에 일반화 개념이 필요하다.
일반화란 현실세계에 존재하는 실체들의 공통적인 속성과 기능을 일반화 시킨 개념
배달원은 실제 배달원인 정민영, 강창훈, 운성우라는 실존하는 배달원을 일반화 시킨 개념
클래스는  현실세계에 존재하는 실체들의 공통적인 속성과 기능을 일반화 시킨 개념
현실게셰에 존재하는 실체는 객체라고 한다,
클래스와 객체
배달원과 우성우,강창훈,정민영
->배달원 클래스를 만들고 우성우, 강창훈, 정민영 이라는 객체를 만들수 있습니다.
주문자는 플랫폼으로 음식점에서 주문한다.
클래스는 객체를 일반화시킨것. 객체는 실존하는 존재. 
클래스를 기반으로 프로그래밍을 하는것이 객체지향 프로그램이라고 한다.
Order order=new Order();// 클래스를 이용해 객체를 생성한다.
클래스를 통해 객체를 생성하는 행위:인스턴스를 생성
Order클래스를 통해 새로운 실체인 order객체를 생성한다.
order.name=우성우
order.grade="VIP"
order.address="강남구"
order.telephone="010-1234-5678"
order.payment()

클래스(Class)(속성,기능)을 이용해 객체를 생성하고
객체(Object)는 속성과 기능을 포함.
속성:특성,어트리뷰,트(attribute),프로퍼티(Property)
기능:메소드(method),함수(function)
자바스크립트의 객체 정의는 {속성명:속성값,속성명2:속성값2}

rdbms를 아직 쓰는이유: 데이터 참조 무결성때문
결함이없는.오염이 없는 데이터 를 받기위해 rdbms를 사용함
무결성이란 데이터베이스에서 저장된 값들에 대하여 여러가지 제한을 통하여
데이터대한 신뢰를 보장하게 하여 일관성을 유지시켜주는 것입니다.


웹 퍼블리셔: 웹표준을 지키는일을함/ https://www.w3schools.com/-여기기준/ 웹 접근성을 준수'
시멘트 태그: header, main, section, footer, article, aside, figure, nave 등
반응형 웹 디자인 (Responsive web design)
반응형 웹 디자인(responsive web design, RWD)이란 하나의 웹사이트에서 PC, 스마트폰, 태블릿 PC 등 접속하는 
디스플레이의 종류에 따라 화면의 크기가 자동으로 변하도록 만든 웹페이지 접근 기법을 말한다
구현시 media tag  을 같이 사용
프런트엔드 웹 개발자
/자바스크립트 사용/
순수 자바스크립트로 개발: vanilla js./라이브러리,프레임 워크 이용 x
js문제점을 보완한 언어:type scripts
프런트엔드 프레임워크:정말빠른 템포로 트렌드가 바뀜
ReactNative,FLUTTER: IOS/ANDROID 동시에 만들기 가능
MAUI:윈도우앱/IOS/ANDROID 3가지 만들수있음
DART LANGUAGE
프런트엔드: 사용자와 상호작용하는 걸만듬
백엔드 개발자가 하는일
서버사이드에서 HTML/CSS제어
데이터 처리 전담. 레스트풀?
런타임환경이 서버-> 실행환경(서버) 에대한 이해도가 높아야함(리눅스 기반 우분투, centos,레드헷)
서버용 소프트 웨어를 잘 알아야함
데이터베이스 RDBMS,NOSQL
통신 프로토콜에 대한 이해/HTPP,HTTPS, SMTP, TCP/IP, UDP 등등
JAVA(대체제 KOTLIN)/PHP/python/c#/node.json

관심사의 분리
Node Module의 정의/사용법
Module 이란?
개발 생산성의 효율성과 편리한 유지보수를 위해 사용용도,제공, 기능의 단위로 분리하여 코드를 작성해
재사용하기 위한 기본단위
모듈 파일을 참조 하여 모듈내 정의된 속성과 기능을 쉽게 재활용
확장자는,js 참조할땐 확장자를 주로 생략
노드 기반 관심사의 분리및 재사용성을 극대화 해주는 방식
[DRY 한 코딩방식": DON'T REPEAT YOURSELF ->  가볍게, 라이트하게 /]
모듈 정의및 참조하기
• ~.js 확장자 자바스크립트 파일로 작성,파일 확장자는 생략가능.
• export 예약어 키워드를 통해 모듈내 속성과 기능을 외부로 노출해준다.
• import 나 require 예약어 키워드를 통해 다른 모듈의 속성과 기능을 불러와(참조하여) 사용한다.
• Node에서는 import 보다는 require 키워드를 통해 주로 모듈을 참조 호출합니다.
• 모듈 스코프를 통해 모듈내 정의된 변수는 해당 모듈에서만 기본적으로 사용가능
• 모듈 내부의 데이터와 함수를 다른 파일에서 사용하게 하려면 export 를 통해 노출하고 require를 통해 사용한다.
벡엔드 기술의 공통점 
1. 모든 백엔드 개발언어는 web 개발 framework를 이용한다. 
2. MVC 개발 패턴을 사용해서 개발한다. 
3. ORM 기법을 사용해서 데이터 처리를 한다. 

framework를 사용하는이유 
1. 다양한 기능을 제공하여 생산성이 높아지고 / 이미 만들어 놓은 기능을 가져다 쓰기 때문에 코드의 재사용성이 높다.
2. 개발 패턴으로 개발한다. MVC
3.ORM을 이용한 데이터처리가 가능한다.
프로젝트 템플릿이란 초기 개발 셋팅을 도와줌/모든 개발 언어/프레임워크에서 기본제공
MVC
Model     :백엔드 앱에서 데이터를 처리하는 모든기능 담당
View      :사용자와 상호작용하는 UI/UX(HTML웹페이지==HTML+CSS+JavaScript) 조작= 변조  
서버기반(백엔드 ) 에서 웹페이지를 변조/조작 할수있는기술 = 뷰엔진 기술 =pug/ejs 보통 한국에서 ejs 사용
Controller(Routes):사용자 요청과 응답을 처리하는 영역(사용자 요청은 주로 url(웹페이지 주소체계))를 통해 이루어짐.
 view 와 컨트롤러는 자동추가
 
 
 
 http://localhost:3000/
 ip주소 :포트
 http://ipadress: 80
 http://localhost: 80
 -------------------------
 웹페이지
 정적 웹페이지
 ~.html
 최초로 웹퍼블리셔가 만들어준 오리지널 웹페이지 리소스
 프론트/백엔드 프로그래밍이 적용되지않은 오리지날 html 페이지 소스
 동적 웹페이지
 퍼블리셔에게서 제공된 오리지날 정적 웹페이지 소스변경(삭제,변경,추가)또는 변형된 웹페이지 
 주로 프런트엔드 기술(jqtuery,react)/백엔드(ejs)등을 이용해 오리지널 제공 html 웹페이지 소스가 변경된 웹페이지
 .js
 .PHP
 ~test.html

12/05 미션

개인별 관리자 웹사이트 프로젝트 생성
-node express  프로젝트명 : nodeadminapp
-개인별 깃허브 레포지토리 개설하고 소스 푸시
-해당 저장소 주소  디스코드 채널에 공유할것
팀별 관리자 웹사이트 프로젝트 생성/협업 환경 준비
팀원초대하여 협업환경 셋팅/강사진 디폴트초대
해당 저장소 주소 디스코드채널에 공유해 줄것
-완
하지만 부족했다
더 공부해야겠다.
----------------------------------------------------------------
Design Pattern 이란
소프트웨어 공학에서 패턴이란 용어는 근/현대 엣거 각종 소프트웨어/시스템을
구축하면서 직면했던 대표적인 주요 문제점들의 해결책에 대한 설계방법들을 유형별로 정리해 둔것.
소프트 웨어 개발의 주요목적인 현실세계의 다양한 문제점들을 해결하기위한 수단으로
S/W 개발작업을 진행할때 직면하는 크고작은 문제들 중 대표적이고 유사한 문제점들에대한 해결방법을
설계/정리/계승 한것. 
-> 다양한 업종에서 사용되는 사고대응/문제해결 메뉴얼과 같은것.
MVC Design Pattern
현대적인 서버기반 웹프로그래밍 구현시 가장 보편적으로 사용하는 설계패턴
클라이언트의 요청과응답에대한 처리(Controller)
/서버측의 Html(화면 view)에 대한 제어/
클라이언트에서 전달된 데이터의 처리와 저장된데이터의 처리(Model)
에 대한 처리지침및 기본가이드 제공
사용자가 처음 대면하는 영역 :Controller/사용자의 요청과 응답을 제어
요청:
1.웹페이지를 달라고 하는 요청
2.웹페이지를 달라고 하면서 데이터도 담아서 요청
3.데이터만 줘.(restful)
html= hyper text(html) markup language
Http= hyper text transfer protocal
ㄴHtml에 대한 요청과응답을 주고받을때 지켜야 하는 약속(프로토콜)/ 인터넷 통신 규약
htpp://www.naver.com
통신프로토콜://호스트명.도메인명
벡엔드에서의 데이터 처리: model  에서 다함
controller 가 요청을 받고 model 이데이터에대한 처리 , view에서 화면에 대한 처리 함전담함
Soc:관심사의 분리/separation
node 에서의 controller: 라우트(Routes)
URL:인터넷 주소/링크주소/UNIFORM RESOURCE LOCATOR
URI:
https:// www.naver.com/member/entry
통신규약://특정웹사이트(호스트).도메인주소(웹서버주소)/컨드롤러명(라우팅 파일)/ 라우팅 메소드(액션 메소드)

컨트롤러명:업무와관련있는 내용 으로 작명
라우팅 메소드: 요청과 응답의 실질적인 기능
RESTFUL 관련 주소체계: /API 많이 사용함
익명 콜백함수
응답(요청)이 들어오면 음답처리를 진행후 결과 값을 되돌려주는함수~~



get-https://www.musinsa.com/auth/login-로그인 웹페이지 요청및 응답 처리
post-https://www.musinsa.com/auth/login-사용자 로그인 정보 수신및 로그인 처리후 경과응답
회원가입
ㄴget https://www.musinsa.com/member/join 회원약관 페이지 요청 및 응답철
ㄴget직접 회원가입: https://www.musinsa.com/member/entry 직접 회원메일주소/암호 입력 회원가입페이지 요청및응답
ㄴpost신규 회원가입정보처리 요청 https://www.musinsa.com/member/entry 신규가입 정보 수신 및 가입처리후 결과응답

상품 카테고리별 상품목록표시:https://www.musinsa.com/categories/001005
단일상품 상세 정보 제공 https://www.musinsa.com/goods/3574305
ㄹ
라우팅이란
웹 기반에서 주로 웹 브라우저와 같은 (모바일 앱,이기종 시스템) 클라이언트 들의
요청(Request,HTTPRequest)에 대한
서버측 에서의 클라이언트 요청 과 응답(Response,HttpResponse)에
대한 처리 요청방식(Method)과 응답 및 처리 프로세스를 정의 하는 백엔드 개발자가 담당하는 업무
와 작업을 말함.


http://shoping.naver.com
http://www.naver.com
통신규약:// 호스트명.도메인명/호출주소체계
호스트명+도메인주소 = 하나의 서비스 주소~

동기(sync), 비동기(async) 개념 이해하기
동기: 여러 작업을 처리함에 있어서 직렬적으로 순차적으로 처리하는 방식
첫번째 작업이 끝나면 다음작업 끝나면 다음작엄../ 우선순위가 존재함
비동기 :여러작업을 처리함에 있어서  병렬적으로 동시에 처리 가능한 방식을 말한다.
여러작업을 병렬로 처리

콜백함수와 콜백 지옥 대신 자바스크립트 에서는 Promise, Async/Await 비동기 구현
콜백함수를 사용하는 목적은 비동기 방식으로 처리되는 자바스크립트 프로그래밍에서
순차적/절차적인 (비지니스 로직)인 프로그래밍을 위해서 콜백함수를 사용한다
특정 기능을 구현하는 함수에다 특정함수를 매개 변수로 전달해서 해당 함수내의 특정 위치에서
전달된 콜백함수를 실행시켜 원하는 로직/절차를 순차적으로 구현되게 할 수 있다.


객체지향 프로그래밍(object oriented programming =oop)의 주요 개념
일반화: 클래스와 객체(실체): 실체(현실에 존재하는 물체)의 공통속성/기능을 일반화 시킨 개념이 클래스
추상화,상속,다형성,캡슐화
추상화(abstraction): 상속(부모 클래스를 상속받아 자식 클래스를 만드는것)과 
추상화인터페이스(미리 클래스에서 구현 해야하는 기능과 속성을 정의만 한다.->구현은 하지않는다.)
----
쇼핑몰에서 주문을 한다.
1. 기본 주문 정보 등록
-주문번호 생성 
2주문상품정보 등록
3.주문 배송지정보 등록
4.결제\


크롬에는 기본적으로ajax가 기본적으로 탑재
ajax가 하는일: 백엔드에 비동기식 처리방식으로 데이터를 요구하는 방식
-웹브라우저쪽 기술(asynchronus JavaScript And Xml)
RESTful(openAPI)
Ajax: 클라이언트쪽 기술
RESTful:서버쪽 기술
json: javascript object Notation: 제이슨 파일: 텍스트 파일.
url 을 통해 겟 방식으로 서버에 데이터를 전달하는 방법 2가지
case1)쿼리스트 방식 (Querystring)으로 주소를 통해 서버로 데이터를 전달하자
기본링크주소?key=value&key=value=key=value
case 2 :파라메터 방식으로 url주소 안에다가 직접 데이터를 넣어서 주소체계를 만들어 데이터를 전달하는 방식
파라메터방식으로 url주소체계를 구성하는것 이거 매우 중요해용~
검색엔진 최적화(seo =search engine optimization)
http://shop.naver.com/product/19000
http://shop.naver.com/category/1200/product/10000
http://naver.com/blog/1
get 와일드카드 방식
localhost:3000/product/detail/1
get 일반 방식
localhost:3000/product/detail/sample
와일드 카드 방식은 아래에!



html의 두가지 관점
server side->view(서버측에서 mvc패턴기반 html을 조작)
view에 보관된 오리지널 html 을 그냥 브라우저로 전달하는 경우
public 폴더 안에 순수.html 페이지를 보관하다가 브라우저 호출에 의해 오리지널 html을 전달하는 경우
client side-> 서버에서 조작된 html이나 오리지널 html(퍼블리셔가 제공한)을 웹브라우저로 로 전달해 브라우저에서 해석
(인터프리팅)해서 화면으로 사용자에게 보여주는 부분
 

 반응형 웹페이지(responsive web)
 반응형웹은 퍼블리셔가 제공해주는 각종 웹페이지를 다양한 사용자 디바이스 해상도 환경에서 사용하는데
 디바이스 해상도에 따라 자동으로 컨텐츠를 정렬제공하여 onesource multi device 해상도를 지원해주는 기술


 반응형 웹을 실제 구현해주는 기술
 csss,mediaquery
  
  퍼블리셔나 개발자(웹개발자-프런트+백엔드)
  mediaquery 를 직접 사용하지 않더라도 손쉽게 반응형 웹을 구현해 주는 반응형 웹 css/ 프레임 워크 기술 등장

bootsrap css framework 짱짱맨

  프로그램 단일소스>라이브러리+패키지>프레임워크(인터프리팅 언어류)>플랫폼(c#,java)




  <meta charset="utf-8" />

유니코드 문자열로 되어있다. 

유니코드 문자열을 쓰는곳이란? 영어를 제외한 언어 

<meta name="viewport" content="width=device-width, initial-scale=1.0" />


content="width
물리적인디바이스의 width 값 설정

initial-scale=1.0 
모바일 환경이냐 기본크기로 보여주는 설정 

<title>게시글 정보 관리</title>
검색엔진 최적화시 중요!
클라이언트 스크립트 태그는 원칙상으로는 

</body>닫는 태그 바로 위에 작성을 한다. 

왜 why? 위에서부터 코드를 읽어가는데 웹페이지가다 로드되고 기능을 작동시키는게 원리에 맞아서입니다.
웹프로그래밍= HTML웹페이지내용을 조작하는것
ㄴ 벡엔드 웹프로드래밍: html 조작을 서버에서 백엔드기술(node.js->view.ejs)로 조작
ㄴ 프런트엔드 웹 프로그래밍:html조작을 웹브라우저에서 프론트엔드 기술(바닐라.js,jquery,각종 현대적인 frontendframework(react/vue/Angular,next.js) 로 조작
html웹페이지=> 서버에서 보내주는html,css,client javascript 가 모두포함된 웹페이지


설계패턴
MVC설계패턴: 서버에서 사용하는 사요자 요청(웹페이지,데이터)과 응답처리패턴
ㄴ (JAVA,PYTHON,PHP,C#,NODE)
ㅁClient-Frontend 기반 UI  SW(APPLICATION)=WEB,MOBILEAPP.WINDOW설치형,MAC설치형,설계패턴
1) MVP 패턴= 옛날 5-10년전 에는 모두 MVP패턴을 사용
웹브라우저 런타임 환경관점,모바일앱관점.설치형 앱 관점.
Model-데이터소스(프런트 엔드에서의 데이터소스-백엔드로 전달할  또는 데이터 소스)
View-화면 ui요소:웹브라우저에 렌더링된 list.html,create.html,modify.html
Presenter:view요소에서 데이터를 추출해서 model소스에 바인딩하거나
서버에서 가져온 데이터를 view요소에 데이터 바인딩 하는 역할(수동으로 한땀한땀)

2) MVVM패턴 -요즘 100퍼센트는 MVVM UI 패턴을 사용해 개발하고 있다네.모바일/설치형 둘다.



1. DBMS의 유형

Copyright © 2023 AIFFEL Corp Node.js로 구현하는 실시간 분산 채팅서비스 강창훈 All Rights Reserved
1) DBMS & RDBMS
• DBMS = 데이터 관리 SW 시스템
• RDBMS = 테이블간의 관계 기반으로 데이터를 저장 관리하는 DBMS(정형데이터를 관계기반으로 체계적으로 데이터의 무결성을 담보)
• 데이터중에 의미있는 데이터(Data)를 정보(Information)라 말하고 현대의 대부분 정보관리시스템은 RDBMS 를 통해 영구적으로 데이터를 저장 관리한다.
2) RDBMS(정형데이터관리) & NOSQL DB(비정형데이터 관리)
• RDB는 정형 데이터를 HDD/SDD에 데이터를 저장하고 관리한다. MySQL,MS SQL,Oracle
• NO SQL DB는 정형 데이터 와 비정형 데이터를 문서 또는 KEY,VALUE구조로 메모리상에 데이터를 저장 관리하여 조회속도가 빠르다 –Mongo/Redis DB
3)NO SQL DB
• NO SQL DB 유형 : DOCUMENT DATABASE, WIDE COLUMN DATABASE, KEY-VALUE DATABASE, GRAPH DATABASE
• Document DB : XML,JSON 문서 포맷의 데이터를 저장 하는 NOSQL DB,조회속도가 좋다 : Mongo DB, AZURE COSMOS DB
• KEY-VALUE DB : KEY,VALUE형태의 구조로 데이터를 관리하는 NOSQL DB : REDIS
 DATA(세상에 널려있고 형태는 가지각색/ 유의미 무의미한 전부 포함)>INFORMATION 유의미한 DATA를 말함 보통관리를함
 관리를 어떻게 하나?
 정보의 수집과 표시
 정보관리 시스템(웹사이트,ERP(회계,영업,생산,경영관리..),그룹웨어(메일,SㅡS)),모바일웹
 각종 정보관리시스템에 의해 수집되 ㄴ데이터(의미있는가치있는)는 소중히 안정적으로 영구적으로 영속적으로 관리되어야한다.


RDBMS(Relational Database Management System=software=service)
=테이블 간의 관계기반으로 데이터를 저장관리하는 DBMS
(정형 데이터를 관계기반으로 체계적으로 데이터의 무결성을 담보해주는 dbms)
사용자 정보: 메일주소,이름. 전화관리
주문정보: 주문번호 ,이름,주문금액,주문상태..주문일시
주문상품정보:주문번호 ,상품번호,상품명,단가,수량
배송정보:, 주문번호,주소 ,배송상태
결제정보:, 주문번호,결제번호,결제방식,결제금액,결제상태


정형데이터:
데이터를 관리할대 데이터구조(형태)를 미리 정해 놓고 정해진 구조의 데이터에 실제데이터를 넣고 관리한다.
비정형데이터(미리 형태/구조가 정의되지않은 데이터):
미리 데이터의 구조를 정해두지않고 관리될수 있는데이터 하지만 주제는 정해짐
무결성: 데이터에 정보에 결함이 발생하지않게하는 성질
= 결함이없는 데이터의 성질
=양질의 데이터
결함이 있는데이터:쓰레기데이터


RDBMS를 1990년대 부터 계속 사용하는 이유(아직도 핵심적으로 이용되는 이유,느려도 사용되는 이유)
=> 데이터의 무결성을 지켜주는 최고의 방법 제공/쓰레기데이터를 만들지안고 데이터를 양질의 품질로 제공함.
database=schema
RDBMS 이해 와 구성요소

1) TABLE간의 관계 기반 정형 데이터 관리
• DATABASE, TABLE 기반으로 미리 정해진 데이터의 구조(정형데이터) 기반 데이터를 관리
• TABLE에 각종 데이터 유형별 컬럼을 생성해 데이터 구조를 미리 정의 사용
• 영구적인 데이터 보관 및 관리가 주요 목적
• 테이블 간의 관계 설정(정규화) 및 구조 수립이 성능이 큰 영향을 미친다 .

2) RDBMS Database 논리구조
Databases
-Table
-Rows-실제 하나의 데이터 셋을 말한다.ex) 사용자 데이터중에 강창훈 데이터(나이,메일, 전화번호 등)
-Columns:컬럼: 테이블에 미리정의된 관리항목 구조(테이블엔 여러개의컬럼이 정의됨 ex) 나이. 이름.등등

MYSQL Client Tools 

MySQL Client <————————————> DB Server(MySQL, MariaDB, Oracle, MSSQL…)

MySQL Workbench <———————————> MYSQL Server=MariaDB Server
HeidisSQL

Node Application <————————————> MySQL 
	L SQL 구문 작성해서 DB 서버로 전송  —> MYSQL에서 클라이언트에서 보내준 SQL구문을 파싱, 구문분석, 실행, 결과 반환…
							<———— SQL 실행결과를 클라이언트에 전송한다. 
							(등록한경우 등록데이터, 수정한경우는 수정건수, 삭제한경우 삭제건수가 조회한 경우는 조회결과)

하나의 단일 컴퓨터 안에서도 통신가능한 시스템을 사용합니다.

RDBMS
L Databases(Schemes) : 하나의 작은 시스템당 하나의 DB, 또는 큰 시스템의 하나의 업무단위(ERP=생산관리 DB, 인사 DB, 회계 DB, 영업관리 DB)

DB Objects

	L Tables: 실제 사용자 데이터가 저장되고 관리되는 객체
		L member, member_config, product, article, chat … 

	L Views : 가상 테이블이라고 하며 실제 물리적으로는 Table처럼 존재하지는 않지만 여러테이블 또는 특정 구조의 테이블 구조가 필요한 경우 
			가상의 테이블을 만들어서 테이블처럼 사용가능하다.
			주로 여러게 흩어져있는 테이블간의 관계를 이용해 자주사용하는 데이터 구조를 가상의 테이블로 만들어 사용한다.
			UV_member_config

	L procedures : Stored Procedure(저장 프로시저)는 자주 사용되는 장문의 SQL 쿼리(비지니스 로직이 sql구문안에 담긴 경우)를 DB서버에 두고 사용
ㄴFunction:db 함수라고 하고 sql 코드를 재사용하고싶은 경우 db 서버에 sql함수를 만들어서 sql코드를 재사용 가능합니다,
ㄴeksdlfrkqt
***Frontend(react.js)<----5%------->Backend(nodeRESTful)-----70%----------> db server(database)
게시글 목록 표시------> 게시글 목록 요청-----> 게시글 목록 조회 sql 작성전송----> 게시글 테이블 조회sql 실행조회 결과 반환
<-표시10%-------------10% <-----반환결과 10%
createschema 'modu_chat'

NULL: 널널하다. 즉 데이터가 들어와도되고 안들어와도되는 칼럼
NOTNULL : 널널하지않다.즉 반드시 데이터가 들어와야하는 칼럼
=========================================================================================================================================
하나의 시스템(웹 시스템= 정보관리 시스템)을 개발하는 단계
요구사항 접수-> 요구사항 정의단계-> 분석 단계-> 설계단계-> 개발단계-> 테스트단계-> 베퍼-운영 관리단계
[<-------------모델링단계---------------------------->]<--------- 개발단계---->
<---------------국제 표준모델링언어=uml---------------><=개발언어
<---------------------모델링 전용툴 사용 모델링--------><개발툴(vscode)

워터폴 개발 방법론: 한단계 끝나면 다음단계 끝나면 다음단계>> 프로젝트 산으로간다..
애자일 개발 방법론
: 핵심기능들을 몇개 추리고 해당기능 위주로 빠르게 분석/설계는 간단히 빠르게 프로토타입을 개발하고 완성해가는 방법론

기획-디자인-설계-개발- 테스트 배포 운영관리
시스템 개발분야
SI분야
WebAgency 분야
Solution 분야
서비스, 플랫폼 분야
========================================================
ERD =>  Entity Relation Diagram
UML언어 중에 Data,Table 에대한  분석/설계시 사용됨
entity(table)관계를 그림으로 표시하는것
=========================================================================================================================================
관계형 데이터 베이스가 데이터가 많아지면 (row가 많아진다) 조회속도가 급격하게 떨어진다.
조회속도 가 떨어지는 이유는?
table full scan 을 통한 데이터 조회
100만건에 데이터가 있다고 가정하면
1번부터  name 이 홍길동인지 아닌지를 100만건 데이터를 모두 조회해서
일치하는 결과를 반환한다.

TableFullScan 조회 비효율을 개선하기 위한 방법 = Index

시스템 데이터 베이스-> sys
사용자 데이터베이스-> modu_chat

member-->
user id, sido(index kty 설정), address
1,welcome,경기도 의왕시 내손동
50,welcome2,경기도 의왕시 내손동
100, gabi 제주도 서귀포시

index key 칼럼에 데이터 인덱스 값이 시스템 데이터 베이스에 인덱스 정보를 관리합니다.
경기도 1,50
제주도 100
10개 시도의 모든 실제 데이터가 존재하는 물리적인 디스크의 위치를 기록한다.
===================================================
orm 기반 개발 방식 2가지
(1) Code First 방식(modelfirs방식)
-모델 코드를 먼저 만들고 만든 모델을 기반으로 해당 Database에 
물리적 테이블을 생성
(orm 기본방식),추천방식.
(2) DB First 방식
DB에 물리적 테이블을 먼저 만들거나 이미 만들어진 테이블 기반으로 
모델을 자동으로 생성해서 모델기반 프로그래밍을 하는 기법


DB 자료형 => 프로그래밍 처리 자료형
• TEXT => TEXT(긴문자열)
• INT => INTEGER
• TINYINT => TINYINT
• BIT => BOOLEAN
• DATETIME =>DATE
• NOT NULL = allowNull:false


==================================================================
ORM 은 만능인가?
ORM의 장단점을 파악하자
ORM을 효율적으로 사용하는 방법?
단순 CRUD 는 ORM으로 처리/XMRGL CUD는 ORM 으로 필수 처리
단순 조회 (단일테이블에대한 단일건 조회/다중건 조회)-ORM처리(findOnd, findAll) 조건도 단순한 경우
그런데 여러개의 테이블을 조인해서 많은 칼럼


암호화란?
------->암호화
강창훈 =adkjfjaklsdf513a513
<------------- 복호화
플레인한 일반적인 데이터/텍스트/정보를 알아볼수 없는 문자열(난독화)
단방향 암호화는 데이터를 암호화하고 복호화가 불가능한 기법
ㄴ4-5가지 업계표준 해시 단방향 암호화 기법이 존재한다.
ㄴSHA1,MD5,SHA256,SHA512
----->암호화가 복잡하고세짐-->해킹이 어려움
양방향 암호화
암호화도 가능하고 복호화 가능한 기법
ㄴ중요한 개인정보중 db에저장시 암호화하고 시스템에서 사용시 복호화 해서 보여줄때 사용하는 기법
ㄴ시스템과 시스템간 중요데이터를 주고받을때
ㄴ 양방향 암호시에는 반드시 암호화 보안키값이 존재하고
해당 보안키값으로 암호화 하고 복호화가 가능함
ㄴ회원주요 개인정보:전화번호, 주소지 , 생년월일,주민번호
최악의 경우 db가


CORS 이슈

동일 출처(프론트엔드리소스) 동일 출처 데이터 백엔드리소스(RESTAPI) 위반 

                              
프론트엔드 웹페이지와 백엔드 RESTAPI 가 같은 도메인주소(서버)에서 제공되는경우는 
CORS이슈가 발생안함...


그런데.. 
RESTFUL을 호출하는 클라이언트(모바일앱/타사사이트/프론트엔드 다른도메인사이트/로컬컴퓨터)등 


Client                                                                                  RESTFul Backend

Mobile Natvie App
Mobiel Cross Platform APP(Flutter...)
RESTful을 서비스하는 동일 어플리케이션내 WebPage                    RESTful Data Backend Servcie1
타사 웹페이지
자사의 별도 도메인으로 서비스되는 프론트엔드 웹페이지
자사의 별도 도메인으로 서비스되는 웹사이트
로컬컴퓨터에서 직접 띠운 웹페이지
인증 과 권한

   사용자들<--------------------->(웹사이트-웹시스템)

                   
1)인증:Authentication,Authentification
ㄴ 웹사이트 시스템 사용자가 누구인지를 파악하는 행위: 인증
ㄴ누구인지를 파악하는 기능이 필요: 로그인이란 행위를 통해 사용자 인증 시행
ㄴ로그인:  회원가입이 필수...
   ㄴ사용자 직접 해당 사이트에 회원가입하여 로그인하는 경우1(메일주소/암호): 직접가입로그인
   ㄴ이미 검증된 빅테크,글로벌/포탈 사이트의 내가 회원가입한 정보를 이용해 로그인하는 경우 :SNS로그인

2)권한: Authorization 
ㄴ해당 시스템에 인증된 사용자가 해당 시스템의 어떤 기능/어떤 데이터에 대해 접근가능한지,사용가능하는지에 
대한 정책(Policy)
-권한 기본적으로 인증(로그인)이 선행되어야한다.
-사용자가 요청하는 웹페이지 또는 데이터(Restful API) 를  해당사용자가 접근이 가능할지,사용가능하게할지에 대한
정책을 프로그램으로 구현하는것..




CASE1) 프론트엔드 /백엔드 나눠진 시스템(사용자 채팅웹사이트-HTML) 에서의 인증과 권한 
ㄴJWT 토큰(JSON데이터-웹브라우저 클라이언트에 저장됨.) 기반 인증과 권한 구현


CASE2) 100% 서버사이드 기술(세션)로만 (MVC) 기반 시스템(관리자웹사이트)의 사용자 인증과 권한
ㄴ서버세션(서버메모리에 저장되는 사용자 인증정보) 기반 인증과 권한 구현
